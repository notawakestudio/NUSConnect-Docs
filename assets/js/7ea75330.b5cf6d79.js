(self.webpackChunknus_connect_docs=self.webpackChunknus_connect_docs||[]).push([[851],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),d=c(n),f=o,g=d["".concat(u,".").concat(f)]||d[f]||p[f]||i;return n?r.createElement(g,s(s({ref:t},l),{},{components:n})):r.createElement(g,s({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=d;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},220:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return a},toc:function(){return u},default:function(){return l}});var r=n(2122),o=n(9756),i=(n(7294),n(3905)),s={title:"Testing Guide"},a={unversionedId:"TestingGuide",id:"TestingGuide",isDocsHomePage:!1,title:"Testing Guide",description:"Setup Guide",source:"@site/docs/TestingGuide.md",sourceDirName:".",slug:"/TestingGuide",permalink:"/NUSConnect-Docs/TestingGuide",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/TestingGuide.md",version:"current",frontMatter:{title:"Testing Guide"},sidebar:"tutorialSidebar",previous:{title:"Project Log",permalink:"/NUSConnect-Docs/ProjectLog"},next:{title:"Timeline",permalink:"/NUSConnect-Docs/Timeline"}},u=[{value:"<strong>Setup Guide</strong>",id:"setup-guide",children:[]},{value:"<strong>Unit Test</strong>",id:"unit-test",children:[]},{value:"<strong>End to End Test</strong>",id:"end-to-end-test",children:[]}],c={toc:u};function l(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"setup-guide"},(0,i.kt)("strong",{parentName:"h2"},"Setup Guide")),(0,i.kt)("p",null,"After running ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn install"),", you should be ready to start testing as all the required dependencies are installed."),(0,i.kt)("h2",{id:"unit-test"},(0,i.kt)("strong",{parentName:"h2"},"Unit Test")),(0,i.kt)("p",null,"We use Jest and React testing library to perform unit tests. We aimed to include unit tests at the early stage to ensure low\nlevel logics are well tested. To run tests, type in ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn test"),"."),(0,i.kt)("h2",{id:"end-to-end-test"},(0,i.kt)("strong",{parentName:"h2"},"End to End Test")),(0,i.kt)("p",null,"We use Cypress to perform end user testing and validation of user interface. Understand that UI changes can be more frequent\nand therefore hard to main, we have decided to include E2E tests in the later stage. To use Cypress for test development, start\nwith ",(0,i.kt)("inlineCode",{parentName:"p"},"npx cypress open")," to open up the desktop client of Cypress. Click on one of the written test to run it in the test browser.\nAny changes saved on the currently running test file will trigger a rerun of the test. You can also run ",(0,i.kt)("inlineCode",{parentName:"p"},"npx cypress run")," to run\nall tests headlessly."))}l.isMDXComponent=!0}}]);