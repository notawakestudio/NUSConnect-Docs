(self.webpackChunknus_connect_docs=self.webpackChunknus_connect_docs||[]).push([[973],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return h}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=u(n),h=i,c=m["".concat(s,".").concat(h)]||m[h]||p[h]||r;return n?a.createElement(c,l(l({ref:t},d),{},{components:n})):a.createElement(c,l({ref:t},d))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var u=2;u<r;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6182:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return o},toc:function(){return s},default:function(){return d}});var a=n(2122),i=n(9756),r=(n(7294),n(3905)),l={sidebar_position:3,sidebar_label:"Developer Guide",title:"Developer Guide"},o={unversionedId:"DeveloperGuide",id:"DeveloperGuide",isDocsHomePage:!1,title:"Developer Guide",description:"Introduction",source:"@site/docs/DeveloperGuide.md",sourceDirName:".",slug:"/DeveloperGuide",permalink:"/NUSConnect-Docs/DeveloperGuide",editUrl:"https://github.com/notawakestudio/NUSConnect-Docs/blob/master/docs/DeveloperGuide.md",version:"current",sidebar_label:"Developer Guide",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Developer Guide",title:"Developer Guide"},sidebar:"tutorialSidebar",previous:{title:"User Guide",permalink:"/NUSConnect-Docs/UserGuide"},next:{title:"Workflow Guide",permalink:"/NUSConnect-Docs/WorkflowGuide"}},s=[{value:"<strong>Introduction</strong>",id:"introduction",children:[]},{value:"<strong>Tech Stack</strong>",id:"tech-stack",children:[{value:"<strong>Front end</strong>",id:"front-end",children:[]},{value:"<strong>Back end</strong>",id:"back-end",children:[]},{value:"<strong>Test</strong>",id:"test",children:[]}]},{value:"<strong>Timeline, testing, configuration, dev-ops, workflow</strong>",id:"timeline-testing-configuration-dev-ops-workflow",children:[]},{value:"<strong>Product Scope</strong>",id:"product-scope",children:[{value:"<strong>Target user profile</strong>",id:"target-user-profile",children:[]},{value:"<strong>Value proposition</strong>",id:"value-proposition",children:[]}]},{value:"<strong>Functionality</strong>",id:"functionality",children:[{value:"<strong>Layout and page design</strong>",id:"layout-and-page-design",children:[]},{value:"How to use these components",id:"how-to-use-these-components",children:[]},{value:"NavBar",id:"navbar",children:[]},{value:"Footer",id:"footer",children:[]},{value:"Sidebar Layout",id:"sidebar-layout",children:[]},{value:"<strong>User &amp; Roles</strong>",id:"user--roles",children:[]},{value:"<strong>Index Generation</strong>",id:"index-generation",children:[]},{value:"<strong>Quiz Page</strong>",id:"quiz-page",children:[]},{value:"Quiz",id:"quiz",children:[]},{value:"Question",id:"question",children:[]},{value:"Quiz page design considerations",id:"quiz-page-design-considerations",children:[]},{value:"Use cases",id:"use-cases",children:[]},{value:"<strong>Forum Page</strong>",id:"forum-page",children:[]},{value:"Post",id:"post",children:[]},{value:"Reply",id:"reply",children:[]},{value:"Forum page design considerations",id:"forum-page-design-considerations",children:[]},{value:"<strong>Dashboard Page</strong>",id:"dashboard-page",children:[]},{value:"Announcement",id:"announcement",children:[]},{value:"Quest",id:"quest",children:[]},{value:"Dashboard page design considerations",id:"dashboard-page-design-considerations",children:[]},{value:"<strong>Forms and data modification</strong>",id:"forms-and-data-modification",children:[]},{value:"Formik and Yup",id:"formik-and-yup",children:[]},{value:"Forms design considerations",id:"forms-design-considerations",children:[]},{value:"<strong>Integration</strong>",id:"integration",children:[]},{value:"<strong>Login and Authentication</strong>",id:"login-and-authentication",children:[]},{value:"<strong>Module</strong>",id:"module",children:[]}]},{value:"<strong>User Stories</strong>",id:"user-stories",children:[]},{value:"<strong>Non-Functional Requirements</strong>",id:"non-functional-requirements",children:[]},{value:"<strong>Developer Workflow</strong>",id:"developer-workflow",children:[]},{value:"<strong>Glossary</strong>",id:"glossary",children:[]}],u={toc:s};function d(e){var t=e.components,l=(0,i.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,a.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"introduction"},(0,r.kt)("strong",{parentName:"h2"},"Introduction")),(0,r.kt)("p",null,"Keen to find out how the application works? Here's all you need to know before\ncontributing."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"tech-stack"},(0,r.kt)("strong",{parentName:"h2"},"Tech Stack")),(0,r.kt)("h3",{id:"front-end"},(0,r.kt)("strong",{parentName:"h3"},"Front end")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Next.js"),(0,r.kt)("li",{parentName:"ul"},"TypeScript"),(0,r.kt)("li",{parentName:"ul"},"Tailwind CSS"),(0,r.kt)("li",{parentName:"ul"},"Chakra UI"),(0,r.kt)("li",{parentName:"ul"},"Many other awesome reusable packages on NPM")),(0,r.kt)("h3",{id:"back-end"},(0,r.kt)("strong",{parentName:"h3"},"Back end")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Firebase"),(0,r.kt)("li",{parentName:"ul"},"Deta base"),(0,r.kt)("li",{parentName:"ul"},"Flask")),(0,r.kt)("h3",{id:"test"},(0,r.kt)("strong",{parentName:"h3"},"Test")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Jest"),(0,r.kt)("li",{parentName:"ul"},"React testing library"),(0,r.kt)("li",{parentName:"ul"},"Cypress"),(0,r.kt)("li",{parentName:"ul"},"JMeter")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"timeline-testing-configuration-dev-ops-workflow"},(0,r.kt)("strong",{parentName:"h2"},"Timeline, testing, configuration, dev-ops, workflow")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"Timeline"},"Timeline")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"TestingGuide"},"Testing guide")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"ConfigurationGuide"},"Configuration guide")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"DevOpsGuide"},"DevOps guide")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"WorkflowGuide"},"Workflow guide"))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"product-scope"},(0,r.kt)("strong",{parentName:"h2"},"Product Scope")),(0,r.kt)("h3",{id:"target-user-profile"},(0,r.kt)("strong",{parentName:"h3"},"Target user profile")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"NUS students, teaching assistants and professors looking for a better learning\nmanagement system"),(0,r.kt)("li",{parentName:"ul"},"prefers to view the website on both mobile and laptop environment"),(0,r.kt)("li",{parentName:"ul"},"taking or planning to take a supported module"),(0,r.kt)("li",{parentName:"ul"},"requires help with learning activities"),(0,r.kt)("li",{parentName:"ul"},"looking for ways to interact and learn from peers from the same module"),(0,r.kt)("li",{parentName:"ul"},"wants to have a all-in-one place to check out all related materials"),(0,r.kt)("li",{parentName:"ul"},"is keen to help others learning the same module")),(0,r.kt)("h3",{id:"value-proposition"},(0,r.kt)("strong",{parentName:"h3"},"Value proposition")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"provide powerful features to enhance learning experience and effectiveness"),(0,r.kt)("li",{parentName:"ul"},"user centric and tailored to learners of respective modules"),(0,r.kt)("li",{parentName:"ul"},"intuitive UI and smooth navigation between pages"),(0,r.kt)("li",{parentName:"ul"},"easy to get started with comprehensive supporting documentations"),(0,r.kt)("li",{parentName:"ul"},"mobile first and responsive")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"functionality"},(0,r.kt)("strong",{parentName:"h2"},"Functionality")),(0,r.kt)("h3",{id:"layout-and-page-design"},(0,r.kt)("strong",{parentName:"h3"},"Layout and page design")),(0,r.kt)("p",null,"Below is the page hierarchy and pages that currently exist in NUS connect. Most\nof our pages follow the same layout and page design with a few exceptions."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:n(4275).Z})),(0,r.kt)("p",null,"Having a consistent layout and page design is necessary for the UX of our app\nand to maintain this, we have a few layout components that we use:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"NavBar"),(0,r.kt)("li",{parentName:"ul"},"Footer"),(0,r.kt)("li",{parentName:"ul"},"Sidebar Layout")),(0,r.kt)("p",null,"These components serve to maintain the layout of our pages and make creating\npages easy. Currently all our components support a dark mode along side the\nlight mode and can be toggled with a button in the NavBar."),(0,r.kt)("p",null,"More in-depth discussion on each layout component will be below."),(0,r.kt)("h3",{id:"how-to-use-these-components"},"How to use these components"),(0,r.kt)("p",null,"To use a layout, just warp any child components being used inside the said\nlayout. For example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<Layout>\n    <div>This is inside the layout</div>\n</Layout>\n")),(0,r.kt)("p",null,"The layout will add the necessary items to the page, and any changes made to the\nlayout will affect all pages."),(0,r.kt)("p",null,"However, the NavBar and Footer layouts are automatically added to each page by\ndefault as we have included them in our ","_","app page."),(0,r.kt)("h3",{id:"navbar"},"NavBar"),(0,r.kt)("p",null,"The Nav bar relies on user data and session data, as it maintains information\nabout the user name and profile. The NavBar also works as the toggle for our\nDark Mode and can be used to toggle between the states."),(0,r.kt)("p",null,"The nav bar is made up of 3 different parts:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The quick links and navigation area: links to the dashboard, quick links and\ndark mode toggle is stored."),(0,r.kt)("li",{parentName:"ul"},"The banner area: displays our logo and banner in the middle area of the\nnavbar."),(0,r.kt)("li",{parentName:"ul"},"The profile area: displays user profile information, the module information\nand a user picture.")),(0,r.kt)("p",null,"The NavBar is built to be responsive in 3 different stages."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For larger screens, the full data will be displayed along with the banner and\nuser profile information."),(0,r.kt)("li",{parentName:"ul"},"For medium sized screens, the banner will be omitted and the profile will only\nshow a picture."),(0,r.kt)("li",{parentName:"ul"},"For mobile, only the quick navigation bar will be shown and everything else\nwill be hidden.")),(0,r.kt)("h3",{id:"footer"},"Footer"),(0,r.kt)("p",null,"The footer is a simple component that will be placed at the bottom of any page,\nafter the content. If there is no content on the page or if the content does no\nspan the height of the page, the footer will not be sticked to the bottom of the\npage."),(0,r.kt)("p",null,"The footer only have one part and it contains all the quick links to other\ninformation such as our documentation and other details."),(0,r.kt)("h3",{id:"sidebar-layout"},"Sidebar Layout"),(0,r.kt)("p",null,"The sidebar layout is reliant on user data as it maintains information about the\nuser name and profile. The sidebar can be added to any layout and will work\nresponsively in any given layout. The children of the sidebar layout should have\ntheir css set width to full to fill up the rest of the space."),(0,r.kt)("p",null,"The sidebar is made up of 2 parts:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Sidebar header has quick links to:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"forum"),(0,r.kt)("li",{parentName:"ul"},"quiz"),(0,r.kt)("li",{parentName:"ul"},"dashboard"),(0,r.kt)("li",{parentName:"ul"},"module"))),(0,r.kt)("li",{parentName:"ul"},"Sidebar body has quick links to:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"profile"),(0,r.kt)("li",{parentName:"ul"},"inbox"),(0,r.kt)("li",{parentName:"ul"},"badges"),(0,r.kt)("li",{parentName:"ul"},"scoreboard"),(0,r.kt)("li",{parentName:"ul"},"logout")))),(0,r.kt)("p",null,"The sidebar layout is also built to be responsive in 2 different stages:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For larger screens, the sidebar will be appended to the the side of each page."),(0,r.kt)("li",{parentName:"ul"},"For mobile, the sidebar will be hidden and there will be a pullout drawer to\naccess the quick links.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"user--roles"},(0,r.kt)("strong",{parentName:"h3"},"User & Roles")),(0,r.kt)("p",null,"As our application intends to make use of gamification, by necessity we need to\nhave a way to keep track of users and their activities. Users first login via\nthe social login options provided. Our firebase backend will keep track of the\nuser session as well as the unique user ID. For a first time user, the user ID\nwill be retrieved from firebase and used to populate the user database over at\nDeta base, our main backend database. All relevant information of the user will\nbe saved. One such example includes system generated messages that will be shown\nto the user as well as all module related data."),(0,r.kt)("p",null,"The user data structure is as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"{\n  id: string\n  modules: Module[]\n  profilePicUrl: string\n  role: string\n  userName: string\n  displayName: string\n  email: string\n  created_date: number\n  inbox: Message[]\n}\n")),(0,r.kt)("p",null,"The available roles of a user include:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Admin"),(0,r.kt)("li",{parentName:"ul"},"Student")),(0,r.kt)("p",null,'All users will be given a role of "Student" initially. This allows for all\nrequired actions that can be taken, such as taking a quiz, making a post in the\nforum, or seeing his/her progress at the dashboard. As an "Admin", the user will\nbe granted certain rights that might be required to maintain the website.\nExamples as follows:'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ability to delete posts/replies that belong to anyone"),(0,r.kt)("li",{parentName:"ul"},"Ability to create new module"),(0,r.kt)("li",{parentName:"ul"},"Ability to make announcements and quests")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"index-generation"},(0,r.kt)("strong",{parentName:"h3"},"Index Generation")),(0,r.kt)("p",null,"Index generation will all be done by\n",(0,r.kt)("a",{parentName:"p",href:"https://zelark.github.io/nano-id-cc/"},"nano-id"),". We will use this to help us\ngenerate the index for all quizzes, questions, posts and replies that are stored\nin our database. All the unique identifiers are 21 characters long and are\nrandomly generated. The chances of us getting a duplicate are 1% after 149\nbillion years of continuous generation."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"quiz-page"},(0,r.kt)("strong",{parentName:"h3"},"Quiz Page")),(0,r.kt)("p",null,"The quiz page works by checking the state of the quiz mode and will display\nvarying information depending on the current state of the quiz. For each\n","[quizid]"," there is a Question object which uses the QuizMode state. There are\ncurrently 4 states that a given quiz can be in. The states are as follows:\nSTARTING, REVIEWING, TAKING and ENDING."),(0,r.kt)("p",null,"The UML diagram below shows how the components of the quiz page interact with\neach other."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:n(8422).Z})),(0,r.kt)("p",null,"There are essentially two pieces of data involved in the quiz functionality."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A quiz (collection of questions)"),(0,r.kt)("li",{parentName:"ul"},"A quiz question")),(0,r.kt)("p",null,"Main considerations"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Quiz Modes (previewing, taking, reviewing)"),(0,r.kt)("li",{parentName:"ul"},"CRUD & Database interactions"),(0,r.kt)("li",{parentName:"ul"},"Search and filter"),(0,r.kt)("li",{parentName:"ul"},"Linkage with other components"),(0,r.kt)("li",{parentName:"ul"},"Storing and display of markdown text"),(0,r.kt)("li",{parentName:"ul"},"Code syntax highlighting"),(0,r.kt)("li",{parentName:"ul"},"Integration with Forum")),(0,r.kt)("h3",{id:"quiz"},"Quiz"),(0,r.kt)("p",null,"A quiz is made up of"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"meta data"),(0,r.kt)("li",{parentName:"ul"},"collection of questions (identified by question ID)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "TxRDDtSEpnpodO0d-3ygJ", // 21 char unique identifier generated by nanoid\n    "title": "CS2030 Quiz 1", // for readability and easy of classification\n    "author": "Bob", // potentially changed to user ID\n    "created": "May 11, 2021", // simple readable date, for filtering\n    "week": "1", // for simple classification and display on task board\n    "tags": ["OOP", "intro"], // for filtering and searching\n    "questions": [\n        "mtCHNvypLt4TKizuqmP6f",\n        "gf669ye6dy4ltJSkKb_tZ",\n        "SUdbM9KBpsbywHQvxpFir",\n        "YQdkspzjHcwTL3txI2Bc8"\n    ] // list of questions\n}\n')),(0,r.kt)("p",null,"For each quiz, there will be a list of questions. The order of questions\ndisplayed in the quiz is according to the order stored. There will be two\ndifferent modes when interacting with the quiz. User is either taking a quiz or\nreviewing a quiz. The UI should be kept mostly the same, except for the ability\nto interact with the quiz. When a user submitted a quiz, he will be able to\nreview the quiz results and check the correct answers for each question."),(0,r.kt)("h3",{id:"question"},"Question"),(0,r.kt)("p",null,"A question is made up of"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"meta data"),(0,r.kt)("li",{parentName:"ul"},"question text"),(0,r.kt)("li",{parentName:"ul"},"answers (both correct and incorrect answers)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "gf669ye6dy4ltJSkKb_tZ", // 21 char unique identifier generated by nanoid\n    "modules": ["CS2030", "CS2030S"], // for cases of variants\n    "type": "MRQ", // MCQ, MRQ\n    "question": "What are valid format specifiers for `the String.format()` method?",\n    "correct_answers": ["%f", "%d", "%s"], // in consideration of MRQ\n    "incorrect_answers": ["%w", "%z", "%q"],\n    "author": "yongliang" // consider changing this to contributors and user ID\n}\n')),(0,r.kt)("p",null,'For each question, there will be a list of potential answers. Each answer is a\nstring that is either defined as correct or incorrect. The order of the answers\nwill be random when shown, hence there is no inherent order for each answer\nposition. This also means that the setter should use "None of the other options"\ninstead of "None of the above options" when setting questions.'),(0,r.kt)("h3",{id:"quiz-page-design-considerations"},"Quiz page design considerations"),(0,r.kt)("h4",{id:"making-a-question-and-quiz"},"Making a question and quiz"),(0,r.kt)("p",null,"Instead of forcing users to start with a quiz, we would like to treat a question\nas a build block instead. Users are free to create as many questions as they\nlike, and curate a quiz out of the created questions. This approach will allow\nfor more reusability and flexibility in terms of generating a stream of\nquestions."),(0,r.kt)("p",null,"Current we offer two ways to make a question/quiz. One will be via a form\n(preferred) and there is also an option of using an markdown editor. Note that\nboth options support markdown syntax."),(0,r.kt)("h4",{id:"option-1-form"},"Option 1 (Form)"),(0,r.kt)("p",null,"User can fill in the form, the details of a question:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"type"),(0,r.kt)("li",{parentName:"ul"},"modules"),(0,r.kt)("li",{parentName:"ul"},"question"),(0,r.kt)("li",{parentName:"ul"},"correct answers"),(0,r.kt)("li",{parentName:"ul"},"incorrect answers")),(0,r.kt)("p",null,"The question details will be parsed to retrieve individual fields and converted\nto a JSON object posted to the backend. The other details required for a\nquestion, such as an id and author id, will also be included in the JSON object\nto be saved."),(0,r.kt)("p",null,"The same procedure is the same for creating a quiz."),(0,r.kt)("h4",{id:"option-2-markdown-editor"},"Option 2 (Markdown Editor)"),(0,r.kt)("p",null,"User can type in according to the format, the details of a question:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'---\ntype: MCQ\nmodules:\n- CS2030\n- CS2030S\ncorrect_answers:\n- "Collection of related classes and interfaces which are bundled together"\nincorrect_answers:\n- "We should declare fields as private as much as possible"\n- "We should not throw exceptions that reveal internal implementation of a class as much as possible"\n- "We should avoid using accessors and mutators (also known as getters and setters) to private fields as much as possible"\n- "We should use polymorphism so that each class is responsible for handling its own behavior as much as possible"\n- "None of the others"\n---\n"What is a package in java?"\n')),(0,r.kt)("p",null,"The question details will also be shown on the right preview panel for checking\nof markdown behavior. Once done, user can click submit to upload the question to\nquestion bank. Note that the syntax has to be validated to ensure user is\nsubmitting according to the specified format. The question text will be parsed\nto retrieve individual fields and converted to a JSON object posted to the\nbackend. The other details required for a question, such as an id and author id,\nwill also be included in the JSON object to be saved."),(0,r.kt)("p",null,"The same procedure is the same for creating a quiz."),(0,r.kt)("h3",{id:"use-cases"},"Use cases"),(0,r.kt)("p",null,"System: NUS Connect"),(0,r.kt)("p",null,"Use case: Take a quiz Actor User"),(0,r.kt)("p",null,"MSS:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"User chooses a quiz"),(0,r.kt)("li",{parentName:"ol"},"User starts the quiz"),(0,r.kt)("li",{parentName:"ol"},"User submits the quiz"),(0,r.kt)("li",{parentName:"ol"},"System shows scores")),(0,r.kt)("p",null,"Use case ends."),(0,r.kt)("p",null,"Extensions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"2a. User sees a question.\n    2a1. User selects answers\n    2a2. System stores user selections\n    2a3. User navigate to another question\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"forum-page"},(0,r.kt)("strong",{parentName:"h3"},"Forum Page")),(0,r.kt)("p",null,"The over arching structure of the forum page is done using the forum layout. The\nforum layout holds the post list and its objects which will be displayed on all\nof the URLs with a '/forum' prefix."),(0,r.kt)("p",null,"Below is the UML structure of the forum page with all the components that are\nused in the /index and /","[postid]"," pages."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:n(426).Z})),(0,r.kt)("p",null,"Essentially, the content of forum is split into multiple components, a list of\nall the posts, the main post and the replies. There are essentially two pieces\nof data involved in the post functionality."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A post"),(0,r.kt)("li",{parentName:"ul"},"A reply")),(0,r.kt)("p",null,"Main considerations"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Allowed tags"),(0,r.kt)("li",{parentName:"ul"},"CRUD & Database interactions"),(0,r.kt)("li",{parentName:"ul"},"Search and filter"),(0,r.kt)("li",{parentName:"ul"},"Linkage with other components"),(0,r.kt)("li",{parentName:"ul"},"Storing and display of markdown text"),(0,r.kt)("li",{parentName:"ul"},"Code syntax highlighting"),(0,r.kt)("li",{parentName:"ul"},"Integration with Quiz")),(0,r.kt)("h3",{id:"post"},"Post"),(0,r.kt)("p",null,"A post is made up of"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"meta data"),(0,r.kt)("li",{parentName:"ul"},"collection of tags selected by the user"),(0,r.kt)("li",{parentName:"ul"},"an optional string linking to a question")),(0,r.kt)("p",null,"A student cannot create tags but the module admins can create tags. This is to\nprevent too many random single use tags from popping up."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "J69uViSUVik2Xwcr_wZUK", // 21 char unique identifier generated by nanoid\n    "author_id": "Alan_Tan", // user who made the post\n    "title": "How to post a quiz", // user fills in this field, it is compulsory\n    "content": "This is a longer message, This is a longer message", // user fills in this field, it is not compulsory\n    "created_date": "12 April 2020", // auto generated with javascript datetime function\n    "edited_date": "12 April 2020", // auto generated with javascript datetime function\n    "tags": ["Question"], // user selects the tags\n    "week": "Week 1", // week is auto generated based on the school sem\n    "reply_count": "37", // reply count updated after a reply is posted\n    "up_votes": "10", // up votes will be updated after a user likes the post\n    "is_edited": false, // will show if the user has changed or updated the original post\n    "related_question_id": "" // A string ID that will link to a question. This field is optional\n}\n')),(0,r.kt)("h3",{id:"reply"},"Reply"),(0,r.kt)("p",null,"A reply is made up of"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"meta data")),(0,r.kt)("p",null,"A reply can only be created if the main post exists and hence cannot exist as a\nstand alone unit. This is done to make sure that there are no replies that have\nno master post."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "placeholder", // 21 char unique identifier generated by nanoid\n    "post_id": "J69uViSUVik2Xwcr_wZUK", // the main post that this reply was posted under\n    "author_id": "Alan_Tan", // user who made the reply\n    "content": "This is a reply message", // user fills in this field, it is compulsory\n    "created_date": "12 April 2020", // auto generated with javascript datetime function\n    "edited_date": "12 April 2020", // auto generated with javascript datetime function\n    "up_votes": "10", // up votes will be updated after a user likes the reply\n    "is_edited": false // will show if the user has changed or updated the original post\n}\n')),(0,r.kt)("h3",{id:"forum-page-design-considerations"},"Forum page design considerations"),(0,r.kt)("h4",{id:"data-structure-of-posts-and-replies"},"Data structure of posts and replies"),(0,r.kt)("p",null,"Some considerations to take note of:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Execution time"),(0,r.kt)("li",{parentName:"ul"},"Maintainability"),(0,r.kt)("li",{parentName:"ul"},"Data Storage"),(0,r.kt)("li",{parentName:"ul"},"Searching and filtering"),(0,r.kt)("li",{parentName:"ul"},"Database interactions"),(0,r.kt)("li",{parentName:"ul"},"Coding conventions")),(0,r.kt)("p",null,"Minimally, we wanted the post and reply to have an unidirectional relationship\nbetween each other."),(0,r.kt)("h4",{id:"option-1-current-choice"},"Option 1 (Current choice)"),(0,r.kt)("p",null,"Posts will not have an array of replies and the reply will instead store the\npost_id. Although it might take longer to get the data. This makes more sense as\na reply should not be able to exist without a post and a post can exist without\na reply."),(0,r.kt)("h4",{id:"option-2"},"Option 2"),(0,r.kt)("p",null,"Posts will store a list of replies and the reply will not have the post_id. That\nway, when getting data for a post page, the function will only have to look for\nthe reply indexes that are in the list of replies."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"dashboard-page"},(0,r.kt)("strong",{parentName:"h3"},"Dashboard Page")),(0,r.kt)("p",null,"In the dashboard page, there is information about the level of the user, the\nrecent announcements that are posted, quests that the user can do, some info\nabout the user badges and the the user's ranking on the leader board. There are\n2 major components in the dashboard page:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Announcement Item"),(0,r.kt)("li",{parentName:"ul"},"Quest Item")),(0,r.kt)("p",null,"These components are used to display the data for Announcements and quests\nrespectively."),(0,r.kt)("p",null,"Some of the main considerations that were taken into consideration are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"CRUD & database interactions"),(0,r.kt)("li",{parentName:"ul"},"Filtering by week"),(0,r.kt)("li",{parentName:"ul"},"Inline editing"),(0,r.kt)("li",{parentName:"ul"},"Linkage with other components")),(0,r.kt)("h3",{id:"announcement"},"Announcement"),(0,r.kt)("p",null,"The announcement is made up of"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"meta data"),(0,r.kt)("li",{parentName:"ul"},"title and contents")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "hg1x0pHhPrxk6Adr0EHVR", // 21 char unique identifier generated by nanoid\n    "week": 1, // for classification and filtering\n    "author_id": "WnqaRimjGDDY9KxM49XQ", // to find the user who made the announcement\n    "title": "Welcome to your first week of CS2030!", // title of the announcement\n    "content": "Some things to note for this week ...", // content of the announcement\n    "created_date": 1622557680592 // date the announcement is created in number form\n}\n')),(0,r.kt)("p",null,"The announcements can be filtered by week in the dashboard and can only be\nposted, edited and deleted by users with admin privileges."),(0,r.kt)("h3",{id:"quest"},"Quest"),(0,r.kt)("p",null,"The quest is made up of"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"meta data"),(0,r.kt)("li",{parentName:"ul"},"description and rewards")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "AImRUMlFnX7JwU-eInSoK", // 21 char unique identifier generated by nanoid\n    "description": "Post a forum post", // description of the quest for users to see\n    "week": 1, // for classification and filtering\n    "type": "forum", // for classification and auto generation of quest requirements\n    "count": 1, // number of times the quest can be completed\n    "link": "", // quick link to the location of the quest\n    "start_date": 1622557680592, // user input start date\n    "end_date": 1622557680592, // user input end date\n    "reward": {\n        "exp": 20, // exp for completion of quest\n        "badge": "new badge" // badge for completion of quest (may be left empty)\n    } // reward item that can be used to award exp and badges\n}\n')),(0,r.kt)("p",null,"The quests can be filtered by week in the dashboard and can only be posted,\nedited and deleted by users with admin privileges."),(0,r.kt)("h3",{id:"dashboard-page-design-considerations"},"Dashboard page design considerations"),(0,r.kt)("p",null,"todo"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"forms-and-data-modification"},(0,r.kt)("strong",{parentName:"h3"},"Forms and data modification")),(0,r.kt)("p",null,"All our user input forms are built from formik and yup with some use of\nreact-select for multi and single select fields. The following pages make use of\nsome type of form:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Dashboard (announcement and quest)"),(0,r.kt)("li",{parentName:"ul"},"Forum (post and edit)"),(0,r.kt)("li",{parentName:"ul"},"Quiz (create quiz and create question)")),(0,r.kt)("p",null,"All of the forms we built are used for both editing and creation purposes and\nhence we take in the optional label of the form as a component in order to check\nif the form is editing or creating an object. Along with this, most of the forms\nwill take in an optional object of the original type. For example, if we are\nediting a post, the NewPost form will take in the current post and then can be\nused to auto fill in the previously typed in fields."),(0,r.kt)("h3",{id:"formik-and-yup"},"Formik and Yup"),(0,r.kt)("p",null,"Formik helps us to get the values in and out of the form state, perform\nvalidation and send error messages and handles the form submissions."),(0,r.kt)("p",null,"Yup handles the validation of each field and is flexible in providing error\nmessages for the user to see."),(0,r.kt)("h3",{id:"forms-design-considerations"},"Forms design considerations"),(0,r.kt)("p",null,"We chosoe formik over redux-forms as formik is lighter and faster for any system\nto run. On top of that, we have no need for some of the functionality that\nredux-form provides and hence formik was a good choice for us."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"integration"},(0,r.kt)("strong",{parentName:"h3"},"Integration")),(0,r.kt)("p",null,"The integration of quiz and forum is one of the core features of the\napplication. Currently, typical quiz applications do not support continued\ndiscussion. The quiz/question setters might add in an explanation for people to\ncheck against their answers, but they usually failed to convey in entirety what\nis required for the takers to fully dissolve their doubts. Therefore, what\nusually happens afterwards is that someone has to explicitly create a forum post\noutside of the quiz system, make a explicit reference what quiz/question he/she\nis talking about, then make some clarifying questions. Imagine all these\nvaluable clarifications that could benefit the question takers in the future\nsemesters, but turning into a disorganized mess and getting lost in time."),(0,r.kt)("p",null,"We offer a few practical ways to integrate between functionalities."),(0,r.kt)("p",null,"(Current implementation)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"When someone is reviewing a quiz that he/she just taken, there is an option to\nask related questions in the forum. By clicking on that option, the taker can\nwrite a post without specifying which question he/she is referring to. The\nquestion ID will be recorded and when someone sees such a post, the post\nitself contains an option to view the question directly."),(0,r.kt)("li",{parentName:"ul"},"When reviewing a quiz, the takers can also see related posts listed in the\nsame page.")),(0,r.kt)("p",null,"(Alternative)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"When someone is creating a question, as the setter he/she can include an\nexplanation, which will be automatically published as a special category of\nautomatic post. His explanation will be the first comment. That comment could\npotentially be hidden and only be seen if someone had attempted that question.\nThat post will contain a reference to the exact question and have a way to\nallow viewers to attempt that question directly. What is nice with this\nsetting is that the viewers can comment and leave behind a trail of focused\ndiscussion for that particular question."),(0,r.kt)("li",{parentName:"ul"},"The other channel to automatically publish question related post is when\nsomeone is attempting or reviewing a quiz/question. There will be an option to\ncreate a post if there\u2019s no post for that question. If there\u2019s already a post,\nhe can check and comment on that existing post.")),(0,r.kt)("p",null,"So technically every question will have posts where people can continue the\ndiscussion over many semesters. On the other hand, these posts will only be\ngenerated if ever someone needs an explanation. Thus, if the question is easy\nand no one had any issue with the question, there won\u2019t be a post for that\nquestion at all."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"login-and-authentication"},(0,r.kt)("strong",{parentName:"h3"},"Login and Authentication")),(0,r.kt)("p",null,"Login is done with ",(0,r.kt)("a",{parentName:"p",href:"https://next-auth.js.org"},"next-auth"),". To check if someone is\nsigned in, the useSession() hook is implemented and to save the state between\npages, ",(0,r.kt)("inlineCode",{parentName:"p"},"Provider")," from next-auth/client is implemented. If the application is\nready for deployment, change the ",(0,r.kt)("inlineCode",{parentName:"p"},"NEXTAUTH_URL")," in .env to the canonical URL of\nthe website. All traffic is secure as it uses cross site request forgery tokens\non sign in and sign out. More info on security and authentication can be found\n",(0,r.kt)("a",{parentName:"p",href:"https://next-auth.js.org/getting-started/introduction"},"here"),"."),(0,r.kt)("h4",{id:"providers"},"Providers"),(0,r.kt)("p",null,"Currently the supported providers are: Google ang Github. To setup providers in\ndevelopment, Google and Github accounts are needed. To add the necessary\ninformation. A ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file will have to be made in the root directory. The\ncontents of the ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file as as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"GITHUB_ID=\nGITHUB_SECRET=\n\nGOOGLE_ID=\nGOOGLE_SECRET=\n\nNEXTAUTH_URL=http://localhost:3000\n\n")),(0,r.kt)("p",null,"To set it up, get the a API authentication id and secret from Github and\nGoogle's developers pages and put them in their respective fields."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"module"},(0,r.kt)("strong",{parentName:"h3"},"Module")),(0,r.kt)("p",null,"A module is equivalent to any course of study. We organize information into\ndifferent modules as a direct mapping of the modular system in universities such\nas NUS. However, there is no restriction in creating an artificial course that\nmay not exist in real life."),(0,r.kt)("p",null,"The shape of module data is as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"{\n  id: string\n  title: string\n  users: string[]\n  questions: Question[]\n  quizzes: Quiz[]\n  posts: Post[]\n  replies: Reply[]\n  announcements: Announcement[]\n  quests: Quest[]\n}\n")),(0,r.kt)("p",null,"There is a bi-directional relationship between modules and users, where a module\nkeeps a list of userIds of enrolled users and each user keeps a list of enrolled\nmodules as well. This means care must be taken to ensure that the information\nbetween a module and a user is always in sync."),(0,r.kt)("p",null,"Though not planned to actively support all modules in NUS at the moment, the\nmodule system we built should be able to expand and allow multiple modules to be\nrun concurrently."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"user-stories"},(0,r.kt)("strong",{parentName:"h2"},"User Stories")),(0,r.kt)("p",null,"Priorities:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"High (must have): ",(0,r.kt)("inlineCode",{parentName:"li"},"* * *")),(0,r.kt)("li",{parentName:"ul"},"Medium (nice to have): ",(0,r.kt)("inlineCode",{parentName:"li"},"* *")),(0,r.kt)("li",{parentName:"ul"},"Low (unlikely to have):",(0,r.kt)("inlineCode",{parentName:"li"},"*"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Priority"),(0,r.kt)("th",{parentName:"tr",align:null},"As a \u2026\u200b"),(0,r.kt)("th",{parentName:"tr",align:null},"I want to \u2026\u200b"),(0,r.kt)("th",{parentName:"tr",align:null},"So that I can\u2026\u200b"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"track my progress throughout the semester"),(0,r.kt)("td",{parentName:"tr",align:null},"meet my module requirements")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"visualize my progress"),(0,r.kt)("td",{parentName:"tr",align:null},"be motivated to work towards completing required tasks")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"have a clear view of weekly tasks to be completed"),(0,r.kt)("td",{parentName:"tr",align:null},"tell what is to be done and what is left")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"have a level bar to judge my progress"),(0,r.kt)("td",{parentName:"tr",align:null},"feel like I\u2019m improving as the weeks go by")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"post my opinions on the forum anonymously"),(0,r.kt)("td",{parentName:"tr",align:null},"stop feeling embarrassed to ask \u201cdumb\u201d questions")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"upvote or like forum posts that are interesting"),(0,r.kt)("td",{parentName:"tr",align:null},"help make them receive more attention")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"view my upvoted forum posts"),(0,r.kt)("td",{parentName:"tr",align:null},"easily find and refer to them later")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"tag my posts"),(0,r.kt)("td",{parentName:"tr",align:null},"have an easier time finding and classifying them")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"chat with my fellow module mates via forum Q&A"),(0,r.kt)("td",{parentName:"tr",align:null},"learn from others who are also taking the module")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"do past year quizzes"),(0,r.kt)("td",{parentName:"tr",align:null},"get a better understanding of the module")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"be able to make my own quizzes"),(0,r.kt)("td",{parentName:"tr",align:null},"share my knowledge with other students and help them learn")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"upvote and like quizzes"),(0,r.kt)("td",{parentName:"tr",align:null},"receive more attention")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"view my upvoted quizzes"),(0,r.kt)("td",{parentName:"tr",align:null},"easily find and refer to them later")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"join telegram groups that are related to the mod"),(0,r.kt)("td",{parentName:"tr",align:null},"view discussions and ask questions")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"have all relevant information about a module within a single webpage"),(0,r.kt)("td",{parentName:"tr",align:null},"immediately navigate to it")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"contribute online resources that I found to related to module topics"),(0,r.kt)("td",{parentName:"tr",align:null},"let others benefit from them")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"write guides and articles"),(0,r.kt)("td",{parentName:"tr",align:null},"let them serve as references to myself and my fellow module students")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"gamify the process of learning"),(0,r.kt)("td",{parentName:"tr",align:null},"make doing module related work more fun")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"write my forum posts in markdown"),(0,r.kt)("td",{parentName:"tr",align:null},"have an easier time formatting my posts")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"save my forum posts"),(0,r.kt)("td",{parentName:"tr",align:null},"continue where I left off in the future")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* * *")),(0,r.kt)("td",{parentName:"tr",align:null},"student"),(0,r.kt)("td",{parentName:"tr",align:null},"contribute to the success of the module"),(0,r.kt)("td",{parentName:"tr",align:null},"future students taking this module can learn better")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* *")),(0,r.kt)("td",{parentName:"tr",align:null},"teaching staff"),(0,r.kt)("td",{parentName:"tr",align:null},"be able to monitor the progress of my students"),(0,r.kt)("td",{parentName:"tr",align:null},"meet my module requirements")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* *")),(0,r.kt)("td",{parentName:"tr",align:null},"teaching staff"),(0,r.kt)("td",{parentName:"tr",align:null},"create quizzes for students to attempt"),(0,r.kt)("td",{parentName:"tr",align:null},"test easily misunderstood concepts")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"* *")),(0,r.kt)("td",{parentName:"tr",align:null},"teaching staff"),(0,r.kt)("td",{parentName:"tr",align:null},"provide feedback to students for their attempted exercises"),(0,r.kt)("td",{parentName:"tr",align:null},"clarify any doubts on the spot")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"non-functional-requirements"},(0,r.kt)("strong",{parentName:"h2"},"Non-Functional Requirements")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Non-functional requirements specify the constraints under which the system is\ndeveloped and operated.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Technical requirements:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"should work on both 32-bit and 64-bit environments"),(0,r.kt)("li",{parentName:"ul"},"should work with all existing OS that can install and browse the web via\nChrome/Firefox"))),(0,r.kt)("li",{parentName:"ul"},"Performance requirements:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"should respond within a maximum of three seconds"))),(0,r.kt)("li",{parentName:"ul"},"Load requirements:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"should work under heavy load"),(0,r.kt)("li",{parentName:"ul"},"should allow over 1k modules/posts/quiz/questions/users"))),(0,r.kt)("li",{parentName:"ul"},"Quality requirements:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"should be usable by a freshman"),(0,r.kt)("li",{parentName:"ul"},"should be usable by all NUS students"))),(0,r.kt)("li",{parentName:"ul"},"Security requirements:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"should be secure against known attacks/hacks"),(0,r.kt)("li",{parentName:"ul"},"should not store passwords"))),(0,r.kt)("li",{parentName:"ul"},"Process requirements:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"should follow schedule closely and deliver a major update every one month"))),(0,r.kt)("li",{parentName:"ul"},"Notes about project scope:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"should not required to handle majority of admin tasks of a TA/Prof")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"developer-workflow"},(0,r.kt)("strong",{parentName:"h2"},"Developer Workflow")),(0,r.kt)("p",null,"Please checkout our ",(0,r.kt)("a",{parentName:"p",href:"/NUSConnect-Docs/WorkflowGuide"},"workflow guide")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"glossary"},(0,r.kt)("strong",{parentName:"h2"},"Glossary")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Term"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"quiz"),(0,r.kt)("td",{parentName:"tr",align:null},"a collection of questions")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"question"),(0,r.kt)("td",{parentName:"tr",align:null},"includes question text and answer options")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"answer"),(0,r.kt)("td",{parentName:"tr",align:null},"a possible option for a question")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"forum"),(0,r.kt)("td",{parentName:"tr",align:null},"a collection of posts by users")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"post"),(0,r.kt)("td",{parentName:"tr",align:null},"a way of communication between users")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"badge"),(0,r.kt)("td",{parentName:"tr",align:null},"a token of accomplishment")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"EXP"),(0,r.kt)("td",{parentName:"tr",align:null},"experience points gained from doing quests")))))}d.isMDXComponent=!0},426:function(e,t,n){"use strict";t.Z=n.p+"assets/images/ForumPage-4e839a10a0fbd4df4ddeb8e03b9af7a3.png"},8422:function(e,t,n){"use strict";t.Z=n.p+"assets/images/QuizPage-a803358d104542737b53c17b543518d6.png"},4275:function(e,t,n){"use strict";t.Z=n.p+"assets/images/page-hierarchy-e1fac3f3b479255528ec4aa46aacdd98.png"}}]);